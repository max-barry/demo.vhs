/**
Helpful links that got me here:
http://codepen.io/lbebber/pen/XJRdrV
http://codepen.io/kuka/pen/gpmKZd
https://elrumordelaluz.github.io/csshake/
*/

/**
Vendor
*/
@import "reset";
@import "bourbon";
@import "scut";
@import "csshake/scss/tools";

/**
Functions
*/
@import "math";

/**
Settings & variables
*/
@import "settings";
@import "typography";

/**
Custom resets
*/
html {
    box-sizing: border-box;
    background-color: black;
}

*, *:before, *:after {
    box-sizing: inherit;
}

main {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    display: flex;
    align-items: center;
    justify-content: center;
}

h1 {
    margin: 0;
    color: white;
    text-transform: uppercase;
    font-size: 128px;
}

/**
VHS STYLES
*/
main {
    background-color: #141414;
    background-image: linear-gradient(rgba(255, 255, 255, 0.04) 50%, rgb(0, 0, 0) 50%);
    background-size: 10px;
    &:before {
        content: "";
        z-index: 1;
        display: block;
        position: absolute;
        top: 0;
        right: 0;
        left: 0;
        bottom: 0;
        background-image: url("../img/noise.png");
        opacity: 0.35;
        background-size: 472px;
        background-position: center;
    }
}

h1 {
    $blur: 3px;
    $op: 0.8;
    $mag: 4px;
    $blue: rgba(0, 255, 255, $op);
    $green: rgba(0, 255, 127, $op);
    $red: rgba(220, 20, 60, $op);
    $purple: rgba(255, 0, 255, $op);
    text-shadow: $mag 0px $blur $blue, 0px $mag $blur $purple, -1*$mag 0px $blur $green, 0px -1*$mag $blur $red;
    position: relative;
    -webkit-filter: blur(1px);
    filter: blur(1px);
    opacity: 0.8;
    &:before {
        -webkit-clip-path: inset(0 0 70% 0);
        clip-path: inset(0 0 70% 0);
    }
    &:after {
        -webkit-clip-path: inset(30% 0 0 0);
        clip-path: inset(30% 0 0 0);
        left: -2px;
    }
    &:after, &:before {
        content: attr(data-content);
        position: absolute;
        transform: translate(-50%, -50%);
        white-space: nowrap;
    }
}

button {
    position: absolute;
    bottom: 33vh;
}

.av {
    position: absolute;
    top: 30px;
    left: 30px;
    line-height: 1;
    color: lime;
    opacity: 0.5;
    font-family: Arial;
    font-weight: 700;
    font-size: 100px;
}

// .vignette {
//     display: block;
//     // background: red;
//     position: absolute;
//     top: 0;
//     right: 0;
//     left: 0;
//     bottom: 0;
//     z-index: 0;
//     background-image: radial-gradient(white, black);
// }

/**
TYPOGRAPHY
*/
.t-order main {
    background-color: #C70000;
    background-image: linear-gradient(rgba(255, 255, 255, 0.04) 50%, rgba(0, 0, 0, 0.3) 50%);
    h1 {
        font-family: cansiparanebold, $base-font-family;
        color: #FFF700;
        text-shadow: 4px 0px 3px rgb(255, 0, 0);
    }
}
.t-violent main {
    h1 {
        animation: colorcycle 15s steps(3) infinite, shake-hard 80ms linear infinite !important;
        font-family: "againtsregular", $base-font-family;
        text-shadow: none;
        font-size: 80px;
        line-height: 0.9;
        letter-spacing: 5px;
        opacity: 1;
        &:before, &:after {
            -webkit-clip-path: none;
            clip-path: none;
            animation: none;
            white-space: normal;
        }
    }
}

/**
ANIMATIONS
*/

.a-scanlines {
    animation-timing-function: cubic-bezier(1.000, 0.595, 0.000, 1.650);
    animation-duration: 5s;
    animation-name: scanlines;
    animation-iteration-count: infinite;
}

.a-textjump {
    $jumptime: 100ms;
    &:after {
        animation: textjump $jumptime $ease-in-out-back 0s 1 reverse, cutjumpUp 4.5s linear;
    }
    &:before {
        animation: textjump $jumptime $ease-in-out-back 0s 1, cutjumpDown 4.5s linear;
    }
    &:after, &:before {
        animation-fill-mode: forwards;
        // animation-timing-function: ;
    }
}

.a-vertjump {
    animation: vertjump 150ms linear infinite;
    animation-delay: 4s;
}

.a-off {
    transform-origin: center;
    animation: turnoff 400ms;
    animation-fill-mode: forwards;
    animation-timing-function: $ease-in-quart;
}

.a-noise:before {
    animation: noise 0.2s steps(5) infinite;
}

.a-av-blinkout {
    animation: avblinkout 5s steps(1);
    animation-fill-mode: forwards;
}

@keyframes(avblinkout) {
    0%, 40%, 70%, 90% {
        opacity: 0.5;
    }
    60%, 80%, 100% {
        opacity: 0;
    }
}

@keyframes(noise) {
    0% {
        background-position: -2px 4px;
    }
    25% {
        background-position: 123px 2px;
    }
    50% {
        background-position: 12px 3px;
    }
    75% {
        background-position: 2px 6px;
    }
}

@keyframes(turnoff) {
    0% {
        transform: none;
    }
    20% {
        -webkit-filter: brightness(5);
        filter: brightness(5);
    }
    50% {
        transform: scale(1, 0.005);
        -webkit-filter: brightness(5);
        filter: brightness(5);
        border-radius: 0;
    }
    100% {
        -webkit-filter: brightness(50);
        filter: brightness(50);
        transform: scale(0, 0.005);
        border-radius: 50%;
    }
}


@keyframes(textjump) {
    10%, 30%, 50%, 70%, 90% {
        transform: translate(-48%, -50%) skewX(20deg);
    }
    20%, 40%, 60%, 80% {
        transform: translate(-52%, -50%) skewX(-20deg);
    }
    0%, 100% {
        transform: translate(-50%, -50%);
    }
}
@keyframes(scanlines) {
    0% {
        background-position: center 0%;
    }
    100% {
        background-position: center 200%;
    }
}
@keyframes(cutjumpDown) {
    0% {
        -webkit-clip-path: inset(0 0 70% 0);
        clip-path: inset(0 0 70% 0);
    }
    100% {
        -webkit-clip-path: inset(0 0 20% 0);
        clip-path: inset(0 0 20% 0);
    }
}
@keyframes(cutjumpUp) {
    0% {
        -webkit-clip-path: inset(30% 0 0 0);
        clip-path: inset(30% 0 0 0);
        left: -2px;
    }
    100% {
        -webkit-clip-path: inset(80% 0 0 0);
        clip-path: inset(80% 0 0 0);
        left: -4px;
    }
}

@keyframes(vertjump) {
    0%, 50%, 100% {
        transform: translate(0, 0);
    }
    55%, 75%, 95% {
        transform: translate(0, 1px);
    }
    65%, 85% {
        transform: translate(0, -1px);
    }
}

@keyframes(colorcycle) {
    0%, 33% {
        color: rgb(255, 0, 247);
    }
    34%, 66% {
        color: rgb(0, 196, 255);
    }
    67%, 100% {
        color: rgb(0, 255, 67);
    }
}

@include do-shake('shake-hard', 20, 20, 7);